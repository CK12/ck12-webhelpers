#! /bin/sh

### BEGIN INIT INFO
# Required-Start:    $rabbitmq_server
# Required-Stop:     
# Default-Start:
# Default-Stop:
# Description: Starts or stop searchlistener RabbitMQ Exchange
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# We might have a tmpfs /var/run.
mkdir /var/run/mq >/dev/null 2>&1 || true

. /lib/lsb/init-functions
. /etc/default/rcS

startSearchListener() {
    rm -f /tmp/createDaemon >/dev/null 2>&1
    python /opt/2.0/flx/pylons/flx/flx/lib/mq/listeners/searchlistener.py daemon
    ret=$?
    sleep 2
    pid=$(cat /tmp/createDaemon)
    if [ -z "${pid}" ]; then
        ret=1
    else
        echo "${pid}" > /var/run/mq/searchlistener
    fi
}

stopSearchListener() {
    if [ -f "/var/run/mq/searchlistener" ]; then
        pid="$(cat /var/run/mq/searchlistener)"
        rm -f /var/run/mq/searchlistener > /dev/null 2>&1
        [ -n "${pid}" ] && kill -9 ${pid} || false
        ret=$?
    else
        ret=1
    fi
}

case "$1" in
  start)
	log_begin_msg "Starting RabbitMQ searchlistener..."
    ret=0
    startSearchListener
	log_end_msg $ret
	;;
  status)
    if [ -f "/var/run/mq/searchlistener" ]; then
        pid="$(cat /var/run/mq/searchlistener)"
        [ -n "${pid}" ] && kill -0 "${pid}" >/dev/null 2>&1 || false
        ret=$?
    else
        ret=1
    fi
    [ $ret -eq 0 ] && log_success_msg "RabbitMQ searchlistener is running" || log_failure_msg "RabbitMQ searchlistener is not running"
    ;;
  stop)
    log_begin_msg "Stopping RabbitMQ searchlistener ..."
    ret=0
    stopSearchListener
    log_end_msg $ret
	;;
  restart)
    log_begin_msg "Stopping RabbitMQ searchlistener ..."
    ret=0
    stopSearchListener
    log_end_msg $ret
    sleep 2
    ret=0
	log_begin_msg "Starting RabbitMQ searchlistener..."
    startSearchListener
    log_end_msg $ret
    ;;
  *)
    ;;
esac

exit 0
