# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set ver.3.0.0
# Copyright (c) 2006-2016 Trustwave and contributors. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

#
# The purpose of this file is to hold LOCAL exceptions for your site.
# The types of rules that would go into this file are one where you want
# to unconditionally disable rules or modify their actions during startup.
#
# Please see the file REQUEST-900-EXCLUSIONS-RULES-BEFORE-CRS.conf.example
# for a description of the rule exclusions mechanism and the correct
# use of this file.
#

#
# Example Exclusion Rule: To unconditionally disable a rule ID
# 
# ModSecurity Rule Exclusion: 942100 SQL Injection Detected via libinjection
# SecRuleRemoveById 942100

# Example Exclusion Rule: Remove a group of rules
#
# ModSecurity Rule Exclusion: Disable PHP injection rules
# SecRuleRemoveByTag "attack-injection-php"

#
# Example Exclusion Rule: To unconditionally remove parameter "foo" from 
#                         inspection for SQLi rules
#
# ModSecurity Rule Exclusion: disable sqli rules for parameter foo.
# SecRuleUpdateTargetByTag "attack-sqli" "!ARGS:foo"


# -- [[ Changing the Disruptive Action for Anomaly Mode ]] --
#
# In Anomaly Mode (default in CRS3), the rules in REQUEST-949-BLOCKING-EVALUATION.conf
# and RESPONSE-959-BLOCKING-EVALUATION.conf check the accumulated attack scores
# against your policy. To apply a disruptive action, they overwrite the default
# actions specified in SecDefaultAction (setup.conf) with a 'deny' action.
# This 'deny' is by default paired with a 'status:403' action.
#
# In order to change the disruptive action from 'deny' to something else,
# you must use SecRuleUpdateActionByID directives AFTER the CRS rules
# are configured, for instance in the RESPONSE-999-EXCEPTIONS.conf file.
#
# These actions only apply when using Anomaly Mode.
#
# Default action: block with error 403
# (No configuration needed in this file if you want the default behavior.)
#

# Example: redirect back to the homepage on blocking
#
# SecRuleUpdateActionById 949110 "t:none,redirect:'http://%{request_headers.host}/',chain"
# SecRuleUpdateActionById 959100 "t:none,redirect:'http://%{request_headers.host}/',chain"

# Example: redirect to another URL on blocking
#
# SecRuleUpdateActionById 949110 "t:none,redirect:'http://example.com/report_problem',chain"
# SecRuleUpdateActionById 959100 "t:none,redirect:'http://example.com/report_problem',chain"

# Example: send an error 404
#
# SecRuleUpdateActionById 949110 "t:none,deny,status:404,chain"
# SecRuleUpdateActionById 959100 "t:none,deny,status:404,chain"

# Example: drop the connection (best for DoS attacks)
#
# SecRuleUpdateActionById 949110 "t:none,drop,chain"
# SecRuleUpdateActionById 959100 "t:none,drop,chain"

# rules/REQUEST-921-PROTOCOL-ATTACK.conf
## Allow cleanspeak calls
SecRuleUpdateTargetById 921130 !ARGS:newParts

# rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
## Allow render/questionInstance and submit/answer
SecRuleUpdateTargetById 932105 !ARGS:evalResult
SecRuleUpdateTargetById 932105 !ARGS:userInput
## Allow render/questionInstance and submit/answer
SecRuleUpdateTargetById 932110 !ARGS:evalResult
SecRuleUpdateTargetById 932110 !ARGS:userInput
## Allow cleanspeak call.
SecRuleUpdateTargetById 932115 !ARGS:newParts
## Allow render/questionInstance and submit/answer
SecRuleUpdateTargetById 932115 !ARGS:evalResult
SecRuleUpdateTargetById 932115 !ARGS:userInput
## Allow cleanspeak calls
SecRuleUpdateTargetById 932130 !ARGS:newParts
## Allow render/questionInstance and submit/answer
SecRuleUpdateTargetById 932130 !ARGS:evalResult
SecRuleUpdateTargetById 932130 !ARGS:userInput
## Allow returnTo urls
SecRuleUpdateTargetById 932150 !ARGS:returnTo
## Practice urls with ep
SecRuleUpdateTargetById 932150 !ARGS:ep
## PLIX with backUrl
SecRuleUpdateTargetById 932150 !ARGS:backUrl
## Search with q parameter - eg: 'time patterns' [Bug #57875]
SecRuleUpdateTargetById 932150 !ARGS:q

## All fields with bas64-encoded html content. Skip checking for Windows RCE.
SecRuleUpdateTargetById 932140 !ARGS:artifact
SecRuleUpdateTargetById 932140 !ARGS:xhtml
SecRuleUpdateTargetById 932140 !ARGS:questionData
SecRuleUpdateTargetById 932140 !ARGS:hints
SecRuleUpdateTargetById 932140 !ARGS:testScore
SecRuleUpdateTargetById 932140 !ARGS:evalResult
SecRuleUpdateTargetById 932140 !ARGS:userInput
SecRuleUpdateTargetById 932140 !ARGS:content
# /flx/sanitize
SecRuleUpdateTargetById 932140 !ARGS:string

# rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf
SecRuleUpdateTargetById 933160 !ARGS:assignmentTitle
SecRuleUpdateTargetById 933180 !ARGS:testScore

# rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
SecRuleUpdateTargetById 941120 !ARGS:artifact
SecRuleUpdateTargetById 941120 !ARGS:xhtml
SecRuleUpdateTargetById 941120 !ARGS:questionVariables
SecRuleUpdateTargetById 941120 !ARGS:hints
SecRuleUpdateTargetById 941120 !ARGS:questionData
SecRuleUpdateTargetById 941130 !ARGS:ep
SecRuleUpdateTargetById 941140 !ARGS:newParts

## Allow cleanspeak-notification - this should be last.
SecRuleUpdateTargetById 941100-941340 !ARGS:newParts
## submit/test for Quizzes
SecRuleUpdateTargetById 941100-941340 !ARGS:testScore
## render/questionInstance and submit/answer
SecRuleUpdateTargetById 941100-941340 !ARGS:evalResult
SecRuleUpdateTargetById 941100-941340 !ARGS:userInput

# rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
SecRuleUpdateTargetById 942100 !ARGS:userInput
SecRuleUpdateTargetById 942100 !ARGS:evalResult
SecRuleUpdateTargetById 942100 !ARGS:secret
## Google auth  /auth/verify/member/google?code=
SecRuleUpdateTargetById 942100 !ARGS:code
## Dexter record/event
SecRuleUpdateTargetById 942190 !ARGS:payload
SecRuleUpdateTargetById 942360 "!ARGS:ep"
