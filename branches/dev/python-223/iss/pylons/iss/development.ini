# iss - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = prod-errors@ck12.org
smtp_server = localhost
error_email_from = ck12operations@ck12.org
error_subject_prefix = [ISS Error on local.ck12.org]

instance = iss

iss_home = /opt/2.0/iss/pylons/iss
data_dir = /opt/data
grid_separator = /
term_separator = ,

#DEPLOYMENT RELATED
deployment_target = development
hide_internal_apis = false

#PERMA RELATED
ck12_editor = ck12editor
import_user_id = 3

#The prefix to rest end points that should be used by celery tasks.
#Coud still be localhost in ec2 single instance. 
#Should be changed to the prefix to pylons in a cluster.
iss_prefix_url = http://localhost

# Image Satellite Server
iss_secret = satellite0rb1t
iss_passcode = only ck12 servers allowed
image_satellite_share = 
iss_optimize_host = iss-optimize.ck12.org

# Thumbnail generation related
thumbnail_generation_host = http://highlight.ck12.org/skynet/screenshot
thumbnail_image_type = png
thumbnail_image_width = 1024
thumbnail_image_height = 768
# time frame in minutes between previous and current
thumbnail_diff_in_runs = 120

## Max size 25 MB = 25*1024*1024
attachment_max_upload_size = 26214400

# Fedora-Commons related
# For a cloud machine, this has to be changed to an FQDN
fedora_commons_url = http://localhost:8080/fedora
fedora_commons_user = fedoraAdmin
fedora_commons_password = ck123
# Streaming and download CDN urls for media
# Note: In development environment, both these values should be 
# exactly same as fedora_commons_url above.
cdn_download_url = http://localhost:8080/fedora
cdn_streaming_url = http://localhost:8080/fedora
aws_access_key = AKIAJSLRTPQSJD3DTYAQ
aws_secret_key = 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
aws_bucket_name = download-dev.ck12.org
# Multiple entries should be separated by comma(,)
# Eg: math-dev-1.ck12.org,math-dev-2.ck12.org,math-dev-3.ck12.org
img_cdn_locations = s3.amazonaws.com/image-dev.ck12.org
math_cdn_locations = math-dev.ck12.org


[server:main]
use = egg:gunicorn#main
workers = 5
worker_connections = 600
max_requests = 0
timeout = 180
keepalive = 2
host = 0.0.0.0
port = 5000
#use = egg:Paste#http
#host = 127.0.0.1

[app:main]
use = egg:iss
full_stack = true
static_files = true

iss.version = 2.0

beaker.cache.enabled = False

# SQLAlchemy database URL
sqlalchemy.url = mysql://dbadmin:D-coD#43@localhost:3306/flx2?charset=utf8
sqlalchemy.pool_recycle = 600
sqlalchemy.pool_size = 30
sqlalchemy.max_overflow = 40
#sqlalchemy.master.url = mysql://dbadmin:D-coD#43@localhost:3306/flx2?charset=utf8
#sqlalchemy.master.pool_recycle = 600
#sqlalchemy.master.pool_size = 20
#sqlalchemy.master.max_overflow = 30
#sqlalchemy.slave1.url = mysql://dbadmin:D-coD#43@localhost:3306/flx2?charset=utf8
#sqlalchemy.slave1.pool_recycle = 600
#sqlalchemy.slave1.pool_size = 20
#sqlalchemy.slave1.max_overflow = 40

# SQLAlchemy database properties for Celery tasks
celery.sqlalchemy.url = mysql://dbadmin:D-coD#43@localhost:3306/flx2?charset=utf8
celery.sqlalchemy.pool_recycle = 600
celery.sqlalchemy.pool_size = 10
celery.sqlalchemy.max_overflow = 12
#celery.sqlalchemy.master.url = mysql://dbadmin:D-coD#43@localhost:3306/flx2?charset=utf8
#celery.sqlalchemy.master.pool_recycle = 600
#celery.sqlalchemy.master.pool_size = 5
#celery.sqlalchemy.master.max_overflow = 8
#celery.sqlalchemy.slave1.url = mysql://dbadmin:D-coD#43@localhost:3306/flx2?charset=utf8
#celery.sqlalchemy.slave1.pool_recycle = 600
#celery.sqlalchemy.slave1.pool_size = 5
#celery.sqlalchemy.slave1.max_overflow = 8

## Celery redis configuration
celery_redis.broker.host = localhost
celery_redis.broker.port = 6379
celery_redis.broker.db = 5

celery_test_mode = false
task_cleanup_interval_days_long_term = 180
task_cleanup_interval_days_short_term = 30
event_cleanup_interval_days = 180

## Page size
default_page_size = 10

# Logging configuration
[loggers]
keys = root, routes, iss, sqlalchemy, slowapi

[handlers]
#keys = console
keys = isslog, wsgierrors, slowapi

[formatters]
keys = generic

[logger_root]
level = DEBUG
#handlers = console
handlers = isslog, wsgierrors

[logger_routes]
level = DEBUG
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_iss]
level = DEBUG
handlers =
qualname = iss

[logger_slowapi]
level = DEBUG
handlers = slowapi
qualname = slowapi
propagate = 0 

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_isslog]
class = flx.lib.cloghandler.ConcurrentRotatingFileHandler
args = ('/opt/2.0/log/iss.log', 'a', 100*1024*1024, 30, 'utf-8')
level = NOTSET
formatter = generic

[handler_slowapi]
class = flx.lib.cloghandler.ConcurrentRotatingFileHandler
args = ('/opt/2.0/log/slowapi.iss.log', 'a', 10*1024*1024, 10)
level = NOTSET
formatter = generic 

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
level = ERROR
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s %(threadName)s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S
