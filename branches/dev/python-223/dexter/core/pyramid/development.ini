###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:dexter

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
#    pyramid_debugtoolbar
    pyramid_tm

# Mongo URI
mongo_uri = mongodb://localhost:27017/dexter
mongo.max_pool_size = 20
## Only for production - where replica sets are defined
#mongo.replica_set = rs0

# SQLAlchemy database URL
#sqlalchemy.url = mysql://dbadmin:D-coD#43@localhost:3306/dexter?charset=utf8
#sqlalchemy.pool_recycle = 600
#sqlalchemy.pool_size = 30
#sqlalchemy.max_overflow = 40

jinja2.directories = dexter:templates

dexter_templates = /opt/2.0/dexter/core/pyramid/dexter/templates/email

# Cache settings
cache_share_dir = /opt/data/cache

default_page_size = 5

web_prefix_url=http://www.ck12.org
# Comma seperated list of allowed domains used in modality aggregate celerytask.
allowed_domains=simtest.ck12.org
ck12_auth_prefix = https://romer.ck12.org/auth
ck12_login_cookie = auth-romer
flx_auth_api_timeout = 180
###############################
# Auth settings
###############################
session.type = file
#session.url = 127.0.0.1:6379
session.data_dir = /opt/data/dexter/sessions/data
session.lock_dir = /opt/data/dexter/sessions/lock
session.key = dexter
session.secret = adApt1viT
session.timeout = 86400
session.path = /
session.cookie_on_exception = true

## Internal API Auth
internal_auth_shared_dir = /opt/data/internal_auth
internal_auth = false
ck12_login_cookie = auth-romer

# Admin roles
admin_roles = admin, content-admin, support-admin, content-contractor-admin, content-support-admin

###############################
# Data encryption keys
###############################
aes_secret_key = 01ab38d5e05c92aa098921d9d4626107133c7e2ab0e4849558921ebcc242bcb0
aes_block_size = 16

###############################
# Cache settings
###############################
cache.regions = default_term, second, daily, short_term, long_term, forever
cache.type = dbm
#cache.type = redis
cache.data_dir = /opt/data/dexter
#cache.data_dir = /tmp/data/dexter
cache.second.expire = 1
cache.short_term.expire = 60
cache.short_term.url = localhost:6379
cache.default_term.expire = 300
cache.default_term.url = localhost:6379
cache.long_term.expire = 3600
cache.long_term.url = localhost:6379
cache.daily.expire = 86400
cache.daily.url = localhost:6379
cache.forever.expire = 31536000
cache.forever.url = localhost:6379

celery_redis.broker.host = localhost
celery_redis.broker.port = 6379
celery_redis.broker.db = 0

###
# ADS configuration
###
ck12_ads_user = admin
ck12_ads_key = notck12
###

###
# Invalid Events Notifier Emails
###
sender_email = info@ck12.org
to_email = thejaswi@ck12.org,akshay.valsa@ck12.org

###
# IP2Location configuration
###
ip2location_path = /opt/2.0/deploy/components/ip2location/IP-COUNTRY-REGION-CITY-LATITUDE-LONGITUDE-ZIPCODE-ISP-DOMAIN.BIN

###                                                                                                       
# Kafka Config                                                                                                        
###                                                                                                                       
send_to_kafka = false 
kafka_brokers = 10.37.188.131:9092
kafka_events_topic = gamma_ads_events
kafka_invalid_events_topic = www_invalid_ads_events

# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, dexter, sqlalchemy, pymongo, beaker

[handlers]
keys = dexterlog, wsgierrors

[formatters]
keys = generic

[logger_root]
level = DEBUG
#handlers = console
handlers = dexterlog, wsgierrors

[logger_dexter]
level = DEBUG
handlers =
qualname = dexter

[logger_pymongo]
level = DEBUG
handlers =
qualname = pymongo
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_beaker]
level = DEBUG
handlers =
qualname = beaker.container
propagate = 1

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_dexterlog]
class = dexter.lib.cloghandler.ConcurrentRotatingFileHandler
args = ('/opt/2.0/dexter/log/dexter.log', 'a', 50*1024*1024, 10, 'utf-8')
level = NOTSET
formatter = generic

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
level = ERROR
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
