#
# ads - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

instance = ads

flx_home = /opt/2.0/flx/pylons/ads
data_dir = /opt/data/ads

## login settings
redirect_to_login = true

[server:main]
#use = egg:gunicorn#main
#workers = 5
#worker_connections = 1000
#max_requests = 0
#timeout = 180
#keepalive = 2

#host = 127.0.0.1
#port = 5000

use = egg:Paste#http
host = 127.0.0.1
port = 5002

[app:main]
use = egg:ads
full_stack = true
static_files = true
flx.version = 2.0beta

# SQLAlchemy database URL
sqlalchemy.url = mysql://dbadmin:D-coD#43@localhost:3306/ads?charset=utf8
sqlalchemy.pool_recycle = 600
sqlalchemy.pool_size = 30
sqlalchemy.max_overflow = 40

# SQLAlchemy database properties for Celery tasks
celery.sqlalchemy.url = mysql://dbadmin:D-coD#43@localhost:3306/ads?charset=utf8
celery.sqlalchemy.pool_recycle = 600
celery.sqlalchemy.pool_size = 25
celery.sqlalchemy.max_overflow = 30

celery_test_mode = false

## Page size
default_page_size = 10

###################
# Auth Settings
###################
ck12_login_prefix = http://stephen-desktop.ck12.org/auth
ck12_login_cookie = auth-stephen-desktop

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Logging configuration
[loggers]
keys = root, routes, flx, sqlalchemy

[handlers]
keys = flxlog, wsgierrors, console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = flxlog, wsgierrors

[logger_routes]
level = DEBUG
handlers = flxlog
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_flx]
level = DEBUG
handlers = flxlog
qualname = flx.engine
propagate = 0

[logger_sqlalchemy]
level = WARN
handlers = flxlog
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_flxlog]
class = flx.lib.cloghandler.ConcurrentRotatingFileHandler
args = ('/opt/2.0/log/ads.log', 'a', 50*1024*1024, 10, 'utf-8')
level = DEBUG
formatter = generic

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
level = ERROR
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s %(threadName)s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S
