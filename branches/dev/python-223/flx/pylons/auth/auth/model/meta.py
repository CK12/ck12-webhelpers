"""SQLAlchemy Metadata and Session object"""

__all__ = ['engine', 'meta', 'Session', 'engines', 'Sessions', 'nextSession']

# SQLAlchemy database engine.  Updated by model.init_model().
engine = None
engines = []

# SQLAlchemy session manager.  Updated by model.init_model().
Session = None
Sessions = []
nextSession = 0
# Global metadata. If you have multiple databases with overlapping table 
# names, you'll need a metadata for each database.


## File autogenerated by genmodel.py
from sqlalchemy import MetaData, Table, Column, ForeignKey, Boolean, Integer, SmallInteger, DECIMAL, String, Date, DateTime, Enum, UniqueConstraint, Index, func

meta = MetaData()

from auth.model.mongocry import key as k

Key = k.Key()

def encryptKey():
    #
    #  Should only be run once during boot strapping.
    #
    #  Comment out to prevent it from running by accident.
    #
    if False:
        from auth.lib import kms

        key = Key.getKey()
        eekey = kms.encryptKey(key)
        Key.putKey(eekey)

def getKey():
    from auth.lib import kms

    eekey = Key.getKey()
    return kms.getKey(eekey)

key = getKey()
#key = '\x0b\x9a.\x84\x0b\xdbFx\xb1\xf7*\xf8\x05\xf3Z\xb7'

from auth.lib import aes
from sqlalchemy.types import TypeDecorator

class EncryptedValue(TypeDecorator):
    impl = String

    def process_bind_param(self, value, dialect):
        return aes.encrypt(value, key)

    def process_result_value(self, value, dialect):
        return aes.decrypt(value, key)

########## Reviewed Tables ##########

MemberAuthTypeKey = Table('MemberAuthTypeKey', meta,
  Column('id', Integer(),  primary_key=True, autoincrement=True, nullable=False),
  Column('memberAuthTypeID', Integer(), ForeignKey('MemberAuthTypes.id', name='MemberAuthTypeKey_fk_authType', onupdate='cascade', ondelete='cascade'), unique=True, nullable=False),
  Column('publicKey', EncryptedValue(), nullable=False),
  Column('privateKey', EncryptedValue()),
  Column('passPhrase', EncryptedValue()),
  Column('created', DateTime(timezone=True), nullable=False, default=func.now()),
  Column('updated', DateTime(timezone=True), nullable=False, default=func.now(),  onupdate=func.now()),

  UniqueConstraint('memberAuthTypeID', name='MemberAuthTypeKey_uk_authType'),
  Index('MemberAuthTypeKey_publicKey', 'publicKey'),
  Index('MemberAuthTypeKey_privateKey', 'privateKey')
)

#####################################

USStates = Table('USStates', meta,
  Column('abbreviation', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
)

ZipCodes = Table('ZipCodes', meta,
  Column('zipCode', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  primary_key=True, nullable=False),
  Column('city', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('state', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=False),
  Column('latitude', DECIMAL()),
  Column('longitude', DECIMAL()),
  Column('classification', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('population', Integer()),
)

Countries = Table('Countries', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('code2Letter', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('code3Letter', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('codeNumeric', SmallInteger()),
  Column('image', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('updateTime', DateTime(timezone=False),  nullable=False),
  Column('creationTime', DateTime(timezone=False),  nullable=False),
)

WorldAddresses = Table('WorldAddresses', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('streetNumber', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('street1', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('street2', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('city', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('province', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('postalCode', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
)

USAddresses = Table('USAddresses', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('streetNumber', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('street1', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('street2', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('city', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('state', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('zip', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
)

Addresses = Table('Addresses', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('memberID', Integer(), ForeignKey('Members.id'),  nullable=False),
  Column('countryID', Integer(), ForeignKey('Countries.id')),
  Column('addressID', Integer()),
)

MemberLocations = Table('MemberLocations', meta,
  Column('memberID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
  Column('countryID', Integer(), ForeignKey('Countries.id'), primary_key=True, nullable=False),
  Column('addressID', Integer(), primary_key=True, nullable=False),
)

MemberRoles = Table('MemberRoles', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('description', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('is_admin_role', Boolean(), nullable=False),
)

MemberStates = Table('MemberStates', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('description', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  #Column('description', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=True),
)

MemberHasRoles = Table('MemberHasRoles', meta,
  Column('roleID', Integer(),  ForeignKey('MemberRoles.id'), primary_key=True, nullable=False),
  Column('memberID', Integer(),  ForeignKey('Members.id'), primary_key=True, nullable=False),
)

Members = Table('Members', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('stateID', Integer(), ForeignKey('MemberStates.id'), nullable=False),
  Column('gender', Enum('male', 'female')),
  Column('login', EncryptedValue(255),  nullable=False),
  Column('defaultLogin', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('email', EncryptedValue(255),  nullable=False),
  Column('givenName', EncryptedValue(255),  nullable=False),
  Column('surname', EncryptedValue(255),  nullable=False),
  Column('suffix', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('title', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('birthday', Date(),  nullable=False),
  Column('phone', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('fax', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('website', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('imageURL', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('emailVerified', SmallInteger(), nullable=False, default=0),
  Column('creationTime', DateTime(timezone=False),  nullable=False),
  Column('updateTime', DateTime(timezone=False),  nullable=False),
  Column('loginTime', DateTime(timezone=False),  nullable=False),
  Column('isProfileUpdated', SmallInteger(), nullable=False, default=0),
  Column('licenseAcceptedTime', DateTime(timezone=False),  nullable=True),
  Column('timezone', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False, default="US/Pacific"),
)

MemberAuthTypes = Table('MemberAuthTypes', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('description', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
)

MemberExtData = Table('MemberExtData', meta,
  Column('memberID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
  Column('authTypeID', Integer(), ForeignKey('MemberAuthTypes.id'), primary_key=True, nullable=False),
  Column('token', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('externalID', EncryptedValue(255),  nullable=False),
  Column('verified', SmallInteger(), nullable=False, default=1),
  Column('reset', SmallInteger(), nullable=False, default=0),
  Column('loginCount', Integer(), nullable=False),
  Column('updateTime', DateTime(timezone=False),  nullable=True),
  Column('sharePermissionGrantedTime', DateTime(timezone=False),  nullable=True),
)

Minors = Table('Minors', meta,
  Column('id', Integer(),  primary_key=True, nullable=False),
  Column('givenName', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('surname', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('birthday', Date(),  nullable=False),
  Column('creationTime', DateTime(timezone=False),  nullable=False),
  Column('updateTime', DateTime(timezone=False),  nullable=False),
)

MinorExtData = Table('MinorExtData', meta,
  Column('guardianID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
  Column('minorID', Integer(), ForeignKey('Minors.id'), primary_key=True, nullable=False),
  Column('relationship', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('login', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('password', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('loginCount', Integer(), nullable=False),
  Column('loginTime', DateTime(timezone=False),  nullable=False),
  Column('updateTime', DateTime(timezone=False),  nullable=True),
)

CampaignMembers = Table('CampaignMembers', meta,
  Column('campaignID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('memberID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
)

OAuthClients = Table('OAuthClients', meta,
  Column('id', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('memberID', Integer(), ForeignKey('Members.id'), nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('description', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('url', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('callback', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=False),
  Column('secret', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=False),
  Column('trusted', Boolean(), nullable=False),
)

OAuthTokens = Table('OAuthTokens', meta,
  Column('token', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('clientID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), ForeignKey('OAuthClients.id'), nullable=False),
  Column('memberID', Integer(), ForeignKey('Members.id'), nullable=True),
  Column('timestamp', Integer(), nullable=False),
  Column('nonce', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=False),
  Column('callback', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=True),
  Column('secret', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=True),
  Column('type', Enum('request', 'access'), nullable=False, default="request"),
)

UnderageEmailTokens = Table('UnderageEmailTokens', meta,
  Column('parentEmail', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('token', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('studentID', Integer(), ForeignKey('Members.id'), nullable=True),
  Column('creationTime', DateTime(timezone=False),  nullable=False),
)

UnderageMemberParents = Table('UnderageMemberParents', meta,
  Column('memberID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
  Column('parentEmail', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('token', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
  Column('approvalRequestCount', Integer(), nullable=False),
  Column('approvedTime', DateTime(timezone=False),  nullable=True),
  Column('creationTime', DateTime(timezone=False),  nullable=False),
  Column('updateTime', DateTime(timezone=False),  nullable=False),
)

USSchoolsMaster = Table('USSchoolsMaster', meta,
  Column('id', Integer(), primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
  Column('nces_id', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
  Column('address', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
  Column('city', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
  Column('state', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
  Column('zipcode', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
  Column('county', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=True),
)

OtherSchools = Table('OtherSchools', meta,
  Column('id', Integer(), primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),  nullable=False),
)

MemberSchools = Table('MemberSchools', meta,
  Column('memberID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
  Column('schoolID', Integer(), nullable=False),
  Column('schoolType', Enum('usmaster', 'other', 'home'), nullable=False, default='usmaster'),
)

Applications = Table('Applications', meta,
  Column('providerID', Integer(), primary_key=True, nullable=False),
  Column('siteID', Integer(), primary_key=True, nullable=False),
  Column('appName', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('key', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=False),
  Column('secret', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=False),
  Column('description', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
)

PartnerSchools = Table('PartnerSchools', meta,
  Column('siteID', Integer(), ForeignKey('MemberAuthTypes.id'), primary_key=True, nullable=False),
  Column('partnerSchoolID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),primary_key=True,nullable=False),
  Column('partnerDistrictID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('schoolID', Integer(), ForeignKey('USSchoolsMaster.id'), nullable=True),
  
)

PartnerSchoolDistricts = Table('PartnerSchoolDistricts', meta,
  Column('siteID', Integer(), ForeignKey('MemberAuthTypes.id'), primary_key=True, nullable=False),
  Column('partnerDistrictID', String(length=None,convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=True, nullable=False),
  Column('tokenID', String(length=None,convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), nullable=True),
  Column('districtID', Integer(), ForeignKey('SchoolDistricts.id'), nullable=True),
)

PartnerSchoolHasMembers = Table('PartnerSchoolHasMembers', meta,
  Column('memberID', Integer(), ForeignKey('Members.id'), primary_key=True, nullable=False),
  Column('roleID', Integer(), ForeignKey('MemberRoles.id'), primary_key=True, nullable=False),
  Column('siteID', Integer(), ForeignKey('MemberAuthTypes.id'), primary_key=True, nullable=False),
  Column('partnerSchoolID', String(length=None,convert_unicode=False, unicode_error=None, _warn_on_bytestring=False),primary_key=True, nullable=False),
  Column('partnerSysID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
  Column('partnerMemberID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False)),
)

DistrictHasSchools = Table('DistrictHasSchools', meta,
  Column('districtID', Integer(), ForeignKey('SchoolDistricts.id'),primary_key=True, nullable=False),
  Column('schoolID', Integer(), ForeignKey('USSchoolsMaster.id'), primary_key=True,nullable=False),
)

SchoolDistricts = Table('SchoolDistricts', meta,
  Column('id', Integer(), primary_key=True, nullable=False),
  Column('name', String(length=None,convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), unique=True),
)

Tasks = Table('Tasks', meta,
  Column('id', Integer(), primary_key=True, nullable=False),
  Column('name', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=False),
  Column('taskID', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=True),
  Column('status', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=False),
  Column('ownerID', Integer(), ForeignKey('Members.id'), primary_key=False, nullable=True),
  Column('message', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=True),
  Column('userdata', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=True),
  Column('hostname', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=True),
  Column('started', DateTime(timezone=False),  nullable=False),
  Column('updated', DateTime(timezone=False),  nullable=False),
)

AdminTraces = Table('AdminTraces', meta,
  Column('memberID', Integer(), ForeignKey('Members.id', ondelete='cascade'), primary_key=True, nullable=False),
  Column('adminID', Integer(), ForeignKey('Members.id', ondelete='cascade'), primary_key=True, nullable=False),
  Column('state', Enum('on', 'off'), nullable=False),
  Column('updateTime', DateTime(timezone=False), primary_key=True, nullable=False),
)

DupLogins = Table('DupLogins', meta,
  Column('memberID', Integer(), ForeignKey('Members.id', ondelete='cascade'), primary_key=True, nullable=False),
  Column('login', String(length=None, convert_unicode=False, unicode_error=None, _warn_on_bytestring=False), primary_key=False, nullable=False),
)
