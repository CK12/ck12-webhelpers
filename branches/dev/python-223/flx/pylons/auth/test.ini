#
# auth - Pylons testing environment configuration
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

data_dir = /opt/data

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 5000

[app:main]
use = config:development.ini

# Add additional test specific configuration options as necessary.
sqlalchemy.url = mysql://dbadmin:D-coD#43@localhost:3306/auth?charset=utf8
sqlalchemy.pool_recycle = 600
sqlalchemy.pool_size = 20
sqlalchemy.max_overflow = 25

beaker.session.key = auth-cube

##############################
# Beaker cache settings
# Note cache expire time is in seconds
##############################
enable_nocache_parameter = True
# Memory (For development. Applicable to all regions) 
beaker.cache.type = memory
beaker.cache.data_dir = /opt/data/cache
#beaker.cache.regions = short_term, long_term, daily, forever
beaker.cache.regions = forever
#beaker.cache.short_term.expire = 900
#beaker.cache.long_term.expire = 6000
#daily (i.e 24 hours) cache 
#beaker.cache.daily.expire = 86400
#forever (expires in 1 year)
beaker.cache.forever.data_dir = /opt/data/static_cache
beaker.cache.forever.type = memory
beaker.cache.forever.expire = 31536000

# Logging configuration
[loggers]
keys = root, routes, auth, sqlalchemy, beaker

[handlers]
#keys = console
keys = authlog, wsgierrors

[formatters]
keys = generic

[logger_root]
level = DEBUG
#handlers = console
handlers = authlog

[logger_routes]
level = DEBUG
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_auth]
level = DEBUG
handlers =
qualname = auth

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_beaker]
level = DEBUG
handlers = 
qualname = beaker.container
propagate = 1

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_authlog]
class = handlers.RotatingFileHandler
args = ('/opt/2.0/log/auth_test.log', 'a', 10*1024*1024, 2, 'utf-8')
level = NOTSET
formatter = generic

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
level = ERROR
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s %(threadName)s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S
